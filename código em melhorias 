#include <Servo.h> 

Servo servoMotor;

// Definição dos pinos
const int trigPin = 10;
const int echoPin = 9;
const int servoPin = 3;
const int buzzerPin = 4;
const int ledVerdePin = 5;
const int ledVermelhoPin = 6;

long duration;
int distance;
int pos = 0; // posição atual do servo
bool tampaAberta = false; // indica se a tampa está aberta
unsigned long tempoAbertura = 0; // armazena o tempo em que a tampa foi aberta

void setup() {
  servoMotor.attach(servoPin);

  pinMode(trigPin, OUTPUT);        
  pinMode(echoPin, INPUT);         
  pinMode(buzzerPin, OUTPUT);      
  pinMode(ledVerdePin, OUTPUT);    
  pinMode(ledVermelhoPin, OUTPUT); 

  servoMotor.write(0); // Tampa inicialmente fechada
  digitalWrite(ledVerdePin, LOW);    
  digitalWrite(ledVermelhoPin, HIGH);

  Serial.begin(9600);
}

void loop() {
  // Envia pulso ultrassônico
  digitalWrite(trigPin, LOW);
  delayMicroseconds(2);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Mede a distância
  duration = pulseIn(echoPin, HIGH);
  distance = duration * 0.034 / 2;

  Serial.print("Distancia: ");
  Serial.println(distance);

  if(distance <= 15 && !tampaAberta){
    // Abertura suave
    for(pos = 0; pos <= 58; pos++){
      servoMotor.write(pos);
      delay(15);
    }

    digitalWrite(ledVerdePin, HIGH);
    digitalWrite(ledVermelhoPin, LOW);

    // Buzzer bipando enquanto a tampa está aberta
    for(int i = 0; i < 4; i++){
      digitalWrite(buzzerPin, HIGH);
      delay(500);
      digitalWrite(buzzerPin, LOW);
      delay(500);
    }

    tempoAbertura = millis(); // registra o tempo de abertura
    tampaAberta = true; // marca que a tampa foi aberta
  }

  // Verifica se já passou 4 segundos (4000ms) após abertura para fechar
  if(tampaAberta && millis() - tempoAbertura >= 4000){
    // Fechamento suave
    for(pos = 58; pos >= 0; pos--){
      servoMotor.write(pos);
      delay(20);
    }

    digitalWrite(ledVerdePin, LOW);
    digitalWrite(ledVermelhoPin, HIGH);
    tampaAberta = false; // tampa fechada novamente
  }

  delay(100); // pequena pausa antes da próxima leitura
}